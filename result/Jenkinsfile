pipeline {
    agent {
        docker {
            image 'node:alpine'
        }
    }

    stages {
        stage('build') {
            when {
                changeset "**/result/**"
            }
            steps {
                echo 'Compiling result app'
                dir('result'){
                        sh 'npm install'
                }
            }
        }
        stage('test') {
            when {
                changeset "**/result/**"
            }
            steps {
                echo 'Running Unit Tests on python app'
                dir('result'){
                    sh 'npm install'
                    sh 'npm test'
                }
            }
        }
        stage('docker-package') {
            agent any
            when {
                changeset "**/result/**"
                branch 'master'
            }
            steps {
                echo 'Packaging result app with docker'
                script {
                     docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {

                        def Image = docker.build("luisroset/:v${env.BUILD_ID}", "./")

                        /* Push the container to the custom Registry */
                        
                        Image.push("${env.BUILD_NUMBER}")
                        Image.push("latest") 
                    }
                }
            }
        }
    }
    post {
        always{
            echo 'Build pipeline fo*/result is complete...'

        }
        failure{
            slackSend (channel: "ins*/result-cd",message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
            slackSend (channel: "ins*/result-cd",message: "Build Succeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
